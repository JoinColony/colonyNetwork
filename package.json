{
  "name": "@colony.io/colony-network-contracts",
  "version": "1.0.0",
  "description": "Contracts for Colony Network",
  "scripts": {
    "solhint-staged": "bash ./scripts/solhint.sh",
    "eslint-staged": "bash ./scripts/eslint.sh",
    "eslint": "eslint .",
    "solhint": "solhint ./contracts/**/*.sol",
    "build:docs": "scripts/docgen.js",
    "ping:osx": "osascript -e 'display notification \"Ping!\"'",
    "check:storagevars": "./node_modules/@babel/node/bin/babel-node.js ./scripts/check-storage.js",
    "check:recoverymods": "./node_modules/@babel/node/bin/babel-node.js ./scripts/check-recovery.js",
    "check:coverage": "yarn istanbul-combine -d coverage-merged -p detail -r html -r json coverage-*/coverage-final.json && istanbul check-coverage ./coverage-merged/coverage-final.json --statements 99 --branches 94 --functions 99 --lines 99",
    "check:auth": "./node_modules/@babel/node/bin/babel-node.js ./scripts/check-auth.js",
    "check:versioning": "bash ./scripts/versioningCheck.sh",
    "version:contracts": "bash ./scripts/version-contracts.sh",
    "generate:test:contracts": "bash ./scripts/generate-test-contracts.sh",
    "clean:test:contracts": "rimraf ./contracts/*Updated*.*",
    "clean:contracts": "rimraf ./build/contracts/*",
    "clean:ganache": "rimraf ./ganache-chain-db/",
    "provision:token:contracts": "truffle compile && truffle compile --contracts_directory 'lib/dappsys/[!note][!stop][!proxy][!thing][!token]*.sol' && bash ./scripts/provision-token-contracts.sh",
    "start:blockchain:client": "bash ./scripts/start-blockchain-client.sh",
    "stop:blockchain:client": "bash ./scripts/stop-blockchain-client.sh",
    "fork:goerli": "yarn run ganache-cli --fork https://goerli.infura.io/v3/e21146aa267845a2b7b4da025178196d --port 8605",
    "fork:mainnet": "yarn run ganache-cli --fork https://mainnet.infura.io/v3/e21146aa267845a2b7b4da025178196d --port 8601",
    "flatten:contracts": "mkdir -p ./build/flattened/ && steamroller contracts/colonyNetwork/IColonyNetwork.sol > build/flattened/flatIColonyNetwork.sol && steamroller contracts/colony/IColony.sol > build/flattened/flatIColony.sol && steamroller contracts/reputationMiningCycle/IReputationMiningCycle.sol > build/flattened/flatIReputationMiningCycle.sol && steamroller contracts/colony/IMetaColony.sol > build/flattened/flatIMetaColony.sol && steamroller contracts/common/IRecovery.sol > build/flattened/flatIRecovery.sol && steamroller contracts/common/IEtherRouter.sol > build/flattened/flatIEtherRouter.sol",
    "test:reputation": "npm run start:blockchain:client & truffle migrate --reset --compile-all && nyc truffle test ./test/reputation-system/* ./test/reputation-system/reputation-mining-client/* --network development",
    "test:reputation:coverage": "SOLIDITY_COVERAGE=1 truffle run coverage --solcoverjs ./.solcover.reputation.js --network coverage --temp build --file='./test/reputation-system/**/*'",
    "test:contracts": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle test ./test/contracts-network/* --network development",
    "test:contracts:extensions": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle test ./test/extensions/* --network development",
    "test:contracts:chainid": "npm run stop:blockchain:client && npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle test ./test-chainid/*",
    "test:contracts:chainid:coverage": "SOLIDITY_COVERAGE=1 truffle run coverage --solcoverjs ./.solcover.chainid.js --network coverage --temp build --file='./test-chainid/**/*'",
    "test:contracts:upgrade:parity": "npm run start:blockchain:client parity & npm run generate:test:contracts && truffle migrate --reset --compile-all && truffle test ./test-upgrade/* --network integration",
    "test:contracts:upgrade:ganache": "npm run start:blockchain:client & npm run generate:test:contracts && truffle migrate --reset --compile-all && truffle test ./test-upgrade/* --network development",
    "test:contracts:gasCosts": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle test test-gas-costs/gasCosts.js --network development",
    "test:contracts:patricia": "npm run start:blockchain:client parity & truffle migrate --reset --compile-all && truffle test packages/reputation-miner/patricia-test.js --network development",
    "test:contracts:coverage": "SOLIDITY_COVERAGE=1 truffle run coverage --network coverage --temp build --file='./test/contracts-network/*'",
    "test:contracts:extensions:coverage": "SOLIDITY_COVERAGE=1 truffle run coverage --network coverage --solcoverjs ./.solcover.extensions.js --temp build --file='./test/extensions/*'",
    "test:contracts:watch": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle watch --network development",
    "test:contracts:e2e": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle test test-system/end-to-end.js --network development",
    "test:contracts:smoke": "truffle compile && truffle test ./test-smoke/colony-storage-consistent.js --network storageSmoke",
    "test:security:slither": "slither . --solc-disable-warnings --exclude-low --exclude-informational --exclude-optimization --exclude uninitialized-state-variables,uninitialized-local-variables --filter-paths 'lib|contracts/testHelpers'",
    "test:security:mythril": "truffle run verify --mode quick --style json --limit 1 --swc-blacklist 101,123,128,131 > truffle-security-output.json; sed -i '/^\\[{/!d' ./truffle-security-output.json && node ./scripts/process-truffle-security.js",
    "pretest:contracts": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:upgrade:parity": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse && sed -i 's/this.config.resolver = new Resolver(config, true);/this.config.resolver = new Resolver(this.config, true);/g' ./node_modules/truffle/build/commands.bundled.js",
    "pretest:contracts:upgrade:ganache": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:gasCosts": "sed -ie \"s/mocha-circleci-reporter/eth-gas-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:coverage": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:extensions:coverage": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:watch": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "posttest:contracts": "npm run stop:blockchain:client",
    "posttest:contracts:extensions": "npm run stop:blockchain:client",
    "posttest:contracts:upgrade:parity": "npm run clean:test:contracts | npm run stop:blockchain:client",
    "posttest:contracts:upgrade:ganache": "npm run clean:test:contracts | npm run stop:blockchain:client",
    "posttest:contracts:gasCosts": "npm run stop:blockchain:client",
    "posttest:contracts:patricia": "npm run stop:blockchain:client",
    "posttest:contracts:watch": "npm run stop:blockchain:client",
    "viz:bootstrap": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle exec --network development scripts/viz-bootstrap.js",
    "kyc:bootstrap": "npm run start:blockchain:client & truffle migrate --reset --compile-all && truffle exec --network development scripts/kyc-bootstrap.js"
  },
  "husky": {
    "hooks": {
      "pre-commit": "yarn check:versioning && yarn eslint-staged && yarn solhint-staged && yarn build:docs && git add docs"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JoinColony/colonyNetwork.git"
  },
  "author": "Colony (https://colony.io/)",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/JoinColony/colonyNetwork/issues"
  },
  "homepage": "https://github.com/JoinColony/colonyNetwork#readme",
  "devDependencies": {
    "@babel/core": "^7.8.0",
    "@babel/node": "^7.8.3",
    "@babel/polyfill": "^7.8.3",
    "@babel/preset-env": "^7.8.2",
    "@babel/register": "^7.8.3",
    "@codechecks/client": "^0.1.5",
    "@colony/eslint-config-colony": "8.0.1",
    "async-request": "^1.2.0",
    "babel-plugin-istanbul": "^6.0.0",
    "bignumber.js": "^9.0.0",
    "bluebird": "^3.7.2",
    "bn-chai": "^1.0.1",
    "bn.js": "^5.0.0",
    "chai": "^4.2.0",
    "eslint": "^7.0.0",
    "eslint-config-airbnb-base": "^14.1.0",
    "eslint-config-prettier": "^6.10.0",
    "eslint-plugin-eslint-comments": "^3.1.2",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-prettier": "^3.1.2",
    "eth-ens-namehash": "^2.0.8",
    "eth-gas-reporter": "^0.2.15",
    "ethereumjs-account": "^3.0.0",
    "ethereumjs-util": "^7.0.0",
    "ethers": "5.4.6",
    "ethlint": "^1.2.5",
    "find-in-files": "^0.5.0",
    "ganache-cli": "^6.10.1",
    "ganache-core": "^2.11.2",
    "husky": "^4.3.8",
    "istanbul": "^0.4.5",
    "istanbul-combine": "^0.3.0",
    "mocha": "^8.0.0",
    "mocha-circleci-reporter": "^0.0.3",
    "nthline": "^1.0.1",
    "nyc": "^15.0.0",
    "openzeppelin-solidity": "^3.0.0",
    "pre-commit": "^1.2.2",
    "prettier": "^2.0.0",
    "rimraf": "^3.0.0",
    "shortid": "^2.2.14",
    "solhint": "^3.2.2",
    "solidity-coverage": "^0.7.13",
    "solidity-parser-diligence": "^0.4.18",
    "solidity-steamroller": "^1.1.0",
    "truffle": "^5.1.48",
    "truffle-hdwallet-provider": "^1.0.9",
    "truffle-security": "^1.6.2",
    "web3-utils": "^1.2.9"
  },
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "dependencies": {
    "@chainlink/contracts": "^0.3.0",
    "eslint-plugin-no-only-tests": "^2.4.0"
  }
}
