{
  "name": "@colony.io/colony-network-contracts",
  "version": "1.0.0",
  "description": "Contracts for Colony Network",
  "scripts": {
    "solhint-staged": "bash ./scripts/solhint.sh",
    "prepare": "husky install",
    "eslint-staged": "bash ./scripts/eslint.sh",
    "prettier-contracts-staged": "bash ./scripts/prettier-contracts.sh",
    "eslint": "eslint .",
    "solhint": "solhint ./contracts/**/*.sol",
    "build:docs": "scripts/docgen.js",
    "ping:osx": "osascript -e 'display notification \"Ping!\"'",
    "check:gitchanges": "./scripts/no-git-changes.sh",
    "check:storagevars": "./scripts/check-storage.js",
    "check:recoverymods": "./scripts/check-recovery.js",
    "check:coverage": "istanbul-combine -d coverage-merged -p detail -r html -r json coverage-*/coverage-final.json && istanbul check-coverage ./coverage-merged/coverage-final.json --statements 99 --branches 94 --functions 99 --lines 99",
    "check:auth": "./scripts/check-auth.js",
    "check:versioning": "bash ./scripts/versioningCheck.sh",
    "version:contracts": "bash ./scripts/version-contracts.sh",
    "generate:test:contracts": "bash ./scripts/generate-test-contracts.sh",
    "clean:test:contracts": "rimraf ./contracts/*Updated*.*",
    "clean:contracts": "rimraf ./build/contracts/*",
    "clean:ganache": "rimraf ./ganache-chain-db/",
    "provision:token:contracts": "truffle compile && truffle compile --contracts_directory 'lib/dappsys/[!note][!stop][!proxy][!thing][!token]*.sol' && bash ./scripts/provision-token-contracts.sh",
    "start:bridging": "cd ./lib/safe-contracts && npm i || true && cd ../../ && bash ./scripts/setup-foreign-chain.sh && node ./scripts/setup-bridging-contracts.js &",
    "start:blockchain:client": "bash ./scripts/start-blockchain-client.sh",
    "start:blockchain:client:2": "CHAIN_ID=2656692 PORT=8546 DBPATH=./ganache-chain-db-2 bash ./scripts/start-blockchain-client.sh",
    "start:reputation:oracle": "./scripts/start-reputation-oracle.js",
    "reset:blockchain:client": "npm run stop:blockchain:client && rm -rf ./ganache-chain-db*",
    "stop:blockchain:client": "bash ./scripts/stop-blockchain-client.sh",
    "fork:goerli": "ganache --fork https://goerli.infura.io/v3/e21146aa267845a2b7b4da025178196d --port 8605",
    "fork:mainnet": "ganache --fork https://mainnet.infura.io/v3/e21146aa267845a2b7b4da025178196d --port 8601",
    "flatten:contracts": "mkdir -p ./build/flattened/ && steamroller contracts/colonyNetwork/IColonyNetwork.sol > build/flattened/flatIColonyNetwork.sol && steamroller contracts/colony/IColony.sol > build/flattened/flatIColony.sol && steamroller contracts/reputationMiningCycle/IReputationMiningCycle.sol > build/flattened/flatIReputationMiningCycle.sol && steamroller contracts/colony/IMetaColony.sol > build/flattened/flatIMetaColony.sol && steamroller contracts/common/IRecovery.sol > build/flattened/flatIRecovery.sol && steamroller contracts/common/IEtherRouter.sol > build/flattened/flatIEtherRouter.sol",
    "test:reputation:1": "npm run start:blockchain:client && nyc npx hardhat test ./test/reputation-system/*.js --network development",
    "test:reputation:2": "npm run start:blockchain:client && nyc npx hardhat test ./test/reputation-system/reputation-mining-client/* --network development",
    "test:reputation:coverage": "SOLIDITY_COVERAGE=1 npx hardhat coverage --solcoverjs ./.solcover.reputation.js --temp build-coverage --testfiles './test/reputation-system/**/*'",
    "test:contracts": "npm run start:blockchain:client && npx hardhat test ./test/contracts-network/* ./test/packages/* --network development",
    "test:contracts:bridging:1": "npm run start:blockchain:client && npm run start:blockchain:client:2 && TRUFFLE_FOREIGN=false npx hardhat test ./test/cross-chain/* --network development",
    "test:contracts:bridging:2": "npm run start:blockchain:client && npm run start:blockchain:client:2 && TRUFFLE_FOREIGN=true npx hardhat test ./test/cross-chain/* --network development",
    "test:contracts:bridging:1:coverage": "SOLIDITY_COVERAGE=1 TRUFFLE_FOREIGN=false npx hardhat coverage --solcoverjs ./.solcover.crosschain.js --temp build-coverage --testfiles './test/cross-chain/**/*'",
    "test:contracts:bridging:2:coverage": "npm run start:blockchain:client & npm run start:blockchain:client:2 & SOLIDITY_COVERAGE=1 TRUFFLE_FOREIGN=true npx hardhat coverage --solcoverjs ./.solcover.crosschain.js --temp build-coverage --testfiles './test/cross-chain/**/*'",
    "test:contracts:extensions": "npm run start:blockchain:client && npx hardhat test ./test/extensions/* --network development",
    "test:contracts:chainid": "npm run stop:blockchain:client && npm run start:blockchain:client && npx hardhat test ./test-chainid/*",
    "test:contracts:chainid:coverage": "SOLIDITY_COVERAGE=1 npx hardhat coverage --solcoverjs ./.solcover.chainid.js --temp build-coverage --testfiles './test-chainid/**/*'",
    "test:contracts:upgrade:parity": "npm run start:blockchain:client parity & npm run generate:test:contracts && npx hardhat test ./test-upgrade/* --network integration",
    "test:contracts:upgrade:ganache": "npm run start:blockchain:client ganache & npm run generate:test:contracts && npx hardhat test ./test-upgrade/* --network development",
    "test:contracts:upgrade:coverage": "npm run generate:test:contracts && SOLIDITY_COVERAGE=1 npx hardhat coverage --solcoverjs ./.solcover.upgrade.js --temp build-coverage --testfiles './test-upgrade/*'",
    "test:contracts:gasCosts": "npm run start:blockchain:client && npx hardhat test test-gas-costs/gasCosts.js --network development",
    "test:contracts:patricia": "npm run start:blockchain:client parity && npx hardhat test packages/reputation-miner/patricia-test.js --network development",
    "test:contracts:coverage": "SOLIDITY_COVERAGE=1 npx hardhat coverage --temp build-coverage --testfiles './test/contracts-network/*'",
    "test:contracts:extensions:coverage": "npx hardhat compile && SOLIDITY_COVERAGE=1 NODE_OPTIONS='--max-old-space-size=6144' npx hardhat coverage --solcoverjs ./.solcover.extensions.js --temp build-coverage --testfiles './test/extensions/*'",
    "test:contracts:watch": "npm run start:blockchain:client && truffle watch --network development",
    "test:contracts:e2e": "npm run start:blockchain:client && npx hardhat test test-system/end-to-end.js --network development",
    "test:contracts:smoke": "truffle compile && npx hardhat test ./test-smoke/colony-storage-consistent.js --network storageSmoke",
    "test:security:slither": "slither . --solc-disable-warnings --exclude-low --exclude-informational --exclude-optimization --filter-paths 'lib|contracts/testHelpers|@openzeppelin'",
    "test:security:mythril": "truffle run verify --mode quick --style json --limit 1 --swc-blacklist 101,123,128,131 > truffle-security-output.json; sed -i '/^\\[{/!d' ./truffle-security-output.json && node ./scripts/process-truffle-security.js",
    "pretest:contracts": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:upgrade:parity": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:upgrade:ganache": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:gasCosts": "sed -ie \"s/mocha-circleci-reporter/eth-gas-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:coverage": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:extensions:coverage": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "pretest:contracts:watch": "sed -ie \"s/eth-gas-reporter/mocha-circleci-reporter/g\" ./truffle.js && rimraf ./truffle.jse",
    "posttest:contracts": "npm run stop:blockchain:client",
    "posttest:contracts:extensions": "npm run stop:blockchain:client",
    "posttest:contracts:upgrade:parity": "npm run clean:test:contracts | npm run stop:blockchain:client",
    "posttest:contracts:upgrade:ganache": "npm run clean:test:contracts | npm run stop:blockchain:client",
    "posttest:contracts:gasCosts": "npm run stop:blockchain:client",
    "posttest:contracts:patricia": "npm run stop:blockchain:client",
    "posttest:contracts:watch": "npm run stop:blockchain:client",
    "viz:bootstrap": "npm run start:blockchain:client && truffle exec --network development scripts/viz-bootstrap.js",
    "kyc:bootstrap": "npm run start:blockchain:client && truffle exec --network development scripts/kyc-bootstrap.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JoinColony/colonyNetwork.git"
  },
  "author": "Colony (https://colony.io/)",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/JoinColony/colonyNetwork/issues"
  },
  "homepage": "https://github.com/JoinColony/colonyNetwork#readme",
  "devDependencies": {
    "@codechecks/client": "^0.1.12",
    "@colony/eslint-config-colony": "9.0.2",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.10",
    "@nomiclabs/hardhat-truffle5": "^2.0.7",
    "@nomiclabs/hardhat-web3": "^2.0.0",
    "@openzeppelin/contracts": "^4.9.3",
    "@solidity-parser/parser": "^0.14.2",
    "@truffle/contract": "^4.6.31",
    "@umaprotocol/truffle-ledger-provider": "^1.0.5",
    "async-request": "^1.2.0",
    "axios": "^0.27.2",
    "bignumber.js": "^9.0.2",
    "bluebird": "^3.7.2",
    "bn-chai": "^1.0.1",
    "bn.js": "^5.2.1",
    "body-parser": "^1.20.2",
    "chai": "^4.3.6",
    "eslint": "^8.17.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-no-only-tests": "^2.6.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eth-ens-namehash": "^2.0.8",
    "eth-gas-reporter": "^0.2.25",
    "eth-sig-util": "^3.0.1",
    "ethereumjs-account": "^3.0.0",
    "ethereumjs-util": "^7.1.5",
    "ethers": "^5.6.8",
    "ethlint": "^1.2.5",
    "express": "^4.18.2",
    "find-in-files": "^0.5.0",
    "ganache": "7.5",
    "hardhat": "^2.19.5",
    "hardhat-contract-sizer": "^2.10.0",
    "husky": "^8.0.1",
    "istanbul": "^0.4.5",
    "istanbul-combine": "^0.3.0",
    "mocha": "^10.0.0",
    "mocha-circleci-reporter": "^0.0.3",
    "node-hid": "^2.1.1",
    "nthline": "^1.0.2",
    "nyc": "^15.1.0",
    "pre-commit": "^1.2.2",
    "prettier": "^2.8.8",
    "prettier-plugin-solidity": "^1.1.3",
    "rimraf": "^3.0.2",
    "shortid": "^2.2.16",
    "solhint": "^3.3.7",
    "solidity-coverage": "^0.8.7",
    "solidity-steamroller": "^1.1.0",
    "truffle": "^5.5.30",
    "truffle-contract-size": "^2.0.1",
    "truffle-hdwallet-provider": "^1.0.17",
    "web3-utils": "^1.7.3"
  },
  "optionalDependencies": {
    "fsevents": "^2.3.2"
  },
  "private": true,
  "workspaces": [
    "packages/kyc-oracle",
    "packages/metatransaction-broadcaster",
    "packages/package-utils",
    "packages/reputation-miner"
  ]
}
