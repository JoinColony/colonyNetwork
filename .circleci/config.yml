version: 2

job_common: &job_common
  docker:
    - image: circleci/node:9.11.2
  working_directory: ~/colonyNetwork
step_save_cache: &step_save_cache
  save_cache:
    paths:
      - ~/.cache/yarn
    key: node-modules-{{ checksum "yarn.lock" }}
step_restore_cache: &step_restore_cache
  restore_cache:
    keys:
      - node-modules-{{ checksum "yarn.lock" }}
      - node-modules-
step_setup_global_packages: &step_setup_global_packages
  run:
    name: "Set up global packages"
    command: |
      yarn --pure-lockfile
      git submodule update --init
step_setup_greenkeeper: &step_setup_greenkeeper
  run:
    name: "Add greenkeeper-lockfile-update"
    command: yarn global add greenkeeper-lockfile@1
step_pull_solc_docker: &step_pull_solc_docker
    run:
      name: "Pull solc 0.4.23 docker image"
      command: docker pull ethereum/solc:0.4.23
jobs:
  greenkeeper-updates:
    <<: *job_common
    steps:
      - checkout
      - <<: *step_restore_cache
      - <<: *step_setup_global_packages
      - <<: *step_setup_greenkeeper
      - run:
          name: "Run Greenkeeper lockfile update"
          command: $(yarn global bin)/greenkeeper-lockfile-update
          environment:
            GK_LOCK_YARN_OPTS: "--ignore-workspace-root-check"
      - <<: *step_save_cache
  lint-and-unit-test:
    <<: *job_common
    steps:
      - checkout
      - <<: *step_restore_cache
      - <<: *step_setup_global_packages
      - <<: *step_setup_greenkeeper
      - <<: *step_pull_solc_docker
      - run:
          name: "Setup parity"
          command: |
            wget https://parity-downloads-mirror.parity.io/v1.8.3/x86_64-unknown-linux-gnu/parity_1.8.3_amd64.deb
            sudo dpkg -i parity_1.8.3_amd64.deb
            echo "password" > parityPassword
            cp ./parity-genesis.template.json ./parity-genesis.json
            sed -i "s/wwwww/$(parity --keys-path ./keys --password ./parityPassword account new)/g" ./parity-genesis.json
            sed -i "s/xxxxx/$(parity --keys-path ./keys --password ./parityPassword account new)/g" ./parity-genesis.json
            sed -i "s/yyyyy/$(parity --keys-path ./keys --password ./parityPassword account new)/g" ./parity-genesis.json
            sed -i "s/zzzzz/$(parity --keys-path ./keys --password ./parityPassword account new)/g" ./parity-genesis.json
      - run:
          name: "Install lsof"
          command: |
            sudo apt-get update
            sudo apt-get install lsof
      - run:
          name: "Linting JavaScript"
          command: yarn run eslint
      - run:
          name: "Linting Solidity"
          command: yarn run solium
      - run:
          name: "Checking contract storage variables"
          command: yarn run check:storagevars
      - run:
          name: "Running unit tests"
          command: yarn run test:contracts
      - run:
          name: "Running upgrade tests"
          command: yarn run test:contracts:upgrade
      - run:
          name: "Running gas cost tests"
          command: yarn run test:contracts:gasCosts
      - run:
          name: "Running patricia tree tests"
          command: yarn run test:contracts:patricia
      - run:
          name: "Running colony-contract-loader-network tests"
          command: cd packages/colony-js-contract-loader-network && yarn run test
      - <<: *step_save_cache
      - run:
          name: "Greenkeeper uploading lockfile"
          command: $(yarn global bin)/greenkeeper-lockfile-upload
      # Save test results
      - store_test_results:
          path: test-results.xml
      - store_artifacts:
          path: test-results.xml
  test-coverage:
    <<: *job_common
    steps:
      - checkout
      - <<: *step_restore_cache
      - <<: *step_setup_global_packages
      - <<: *step_pull_solc_docker
      - run:
          name: "Running unit tests with coverage"
          command: yarn run test:contracts:coverage
      # Save coverage artifacts
      - store_artifacts:
          path: coverage

workflows:
  version: 2
  commit:
    jobs:
      - greenkeeper-updates
      - lint-and-unit-test:
          requires:
            - greenkeeper-updates
      - test-coverage:
          requires:
            - greenkeeper-updates
